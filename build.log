Injecting build info into packages/app/src/lib/buildinfo.ts, packages/api/src/lib/buildinfo.ts, packages/app/svelte.config.js
Injecting CURRENT_COMMIT="45c28d0ecbfb8296380c5f0ef1b1b4a9ca846a32" into packages/api/src/lib/buildinfo.ts
Injecting CURRENT_VERSION="1.69.1" into packages/api/src/lib/buildinfo.ts
Injecting CURRENT_COMMIT="45c28d0ecbfb8296380c5f0ef1b1b4a9ca846a32" into packages/app/svelte.config.js
Injecting CURRENT_VERSION="1.69.1" into packages/app/svelte.config.js
Injecting CURRENT_COMMIT="45c28d0ecbfb8296380c5f0ef1b1b4a9ca846a32" into packages/app/src/lib/buildinfo.ts
Injecting CURRENT_VERSION="1.69.1" into packages/app/src/lib/buildinfo.ts
[@churros/api]: Environment variables loaded from .env
[@churros/api]: Prisma schema loaded from prisma/schema.prisma
[@churros/api]: 
[@churros/api]: ✔ Generated Prisma Client (v5.18.0) to ./src/client in 1.50s
[@churros/api]: 
[@churros/api]: ✔ Generated Pothos integration to ./src/pothos/index.d.ts in 443ms
[@churros/api]: 
[@churros/api]: Start by importing your Prisma Client (See: http://pris.ly/d/importing-client)
[@churros/api]: 
[@churros/api]: Tip: Need your database queries to be 1000x faster? Accelerate offers you that and more: https://pris.ly/tip-2-accelerate
[@churros/api]: 
[@churros/api]: patching file src/client/runtime/library.d.ts
[@churros/api]: Hunk #1 succeeded at 2753 (offset 64 lines).
[@churros/api]: Constructing ID_PREFIXES_TO_TYPENAMES from /home/uwun/projects/churros/packages/db/prisma/schema.prisma
[@churros/api]: Injecting ID_PREFIXES_TO_TYPENAMES in /home/uwun/projects/churros/packages/api/src/lib/global-id.ts
[@churros/api]: Injecting ID_PREFIXES_TO_TYPENAMES in /home/uwun/projects/churros/packages/app/src/lib/typenames.ts
[@churros/api]: Updated barrelsby.config.json
[@churros/api]: Generated index.ts for modules announcements bar-weeks changelogs comments curriculum documents events forms gitlab global groups health-checks links logs mails notifications oauth pages payments pictures posts profiles reactions schools services shop student-associations themes ticketing users
[@churros/api]: Running barrelsby
[@churros/api]: Fixed extension-less imports from barrelsby in 705 files
[@churros/api]: Formatting barrels for consistency
[@churros/api]: [ioredis] Unhandled error event: Error: connect ECONNREFUSED 127.0.0.1:6379
[@churros/api]:     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
[@churros/api]:     at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
[@churros/api]:     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
[@churros/api]: [ioredis] Unhandled error event: Error: connect ECONNREFUSED 127.0.0.1:6379
[@churros/api]:     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
[@churros/api]:     at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
[@churros/api]:     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
[@churros/api]: [ioredis] Unhandled error event: Error: connect ECONNREFUSED 127.0.0.1:6379
[@churros/api]:     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
[@churros/api]:     at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
[@churros/api]:     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
[@churros/api]: [ioredis] Unhandled error event: Error: connect ECONNREFUSED 127.0.0.1:6379
[@churros/api]:     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
[@churros/api]:     at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
[@churros/api]:     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
[@churros/api]: signup-accepted.mjml is an empty MJML template
[@churros/api]: signup-done.mjml is an empty MJML template
[@churros/api]: Successfully compiled 10 mail templates: booking, form-answers, group-board-updated, reset-password, signup-accepted, signup-done, signup-rejected, signup-verify-mail, verify-mail, welcome
[@churros/api]: [ioredis] Unhandled error event: Error: connect ECONNREFUSED 127.0.0.1:6379
[@churros/api]:     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
[@churros/api]:     at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
[@churros/api]:     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
[@churros/api]: [ioredis] Unhandled error event: Error: connect ECONNREFUSED 127.0.0.1:6379
[@churros/api]:     at __node_internal_captureLargerStackTrace (node:internal/errors:496:5)
[@churros/api]:     at __node_internal_exceptionWithHostPort (node:internal/errors:671:12)
[@churros/api]:     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1595:16)
[@churros/api]: ✨ Schema exported in [36;1m45.1 ms[0m
[@churros/api]: 📄 Copied mail template [36;1msignup-accepted.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1msignup-done.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1m_header.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1m_footer.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1mreset-password.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1m_head.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1msignup-rejected.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1mbooking.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1mform-answers.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1mgroup-board-updated.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1mverify-mail.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1msignup-verify-mail.mjml[0m
[@churros/api]: 📄 Copied mail template [36;1mwelcome.mjml[0m
[@churros/app]: Injecting PUBLIC_STORAGE_URL=`https://${sw.location.hostname}/storage` into /home/uwun/projects/churros/packages/app/src/service-worker.ts
[@churros/app]: 🎩 Generating runtime...
[@churros/app]: ⚠️  Your Node interface is not properly defined, please fix your schema to be able to use this interface. (For more info, add flag "-l full")
[@churros/app]: 📃 Unchanged: 214
[@churros/app]: 
[@churros/app]: ====================================
[@churros/app]: Loading svelte-check in workspace: /home/uwun/projects/churros/packages/app
[@churros/app]: Getting Svelte diagnostics...
[@churros/app]: 
[@churros/app]: DEPRECATION WARNING: Sass's behavior for declarations that appear after nested
[@churros/app]: rules will be changing to match the behavior specified by CSS in an upcoming
[@churros/app]: version. To keep the existing behavior, move the declaration above the nested
[@churros/app]: rule. To opt into the new behavior, wrap the declaration in `& {}`.
[@churros/app]: 
[@churros/app]: More info: https://sass-lang.com/d/mixed-decls
[@churros/app]: 
[@churros/app]:     ╷
[@churros/app]: 92  │ ┌     &::before {
[@churros/app]: 93  │ │       padding: 0 0.5em;
[@churros/app]: 94  │ │       content: '•';
[@churros/app]: 95  │ │     }
[@churros/app]:     │ └─── nested rule
[@churros/app]: ... │
[@churros/app]: 97  │       font-weight: 600;
[@churros/app]:     │       ^^^^^^^^^^^^^^^^ declaration
[@churros/app]:     ╵
[@churros/app]:     src/routes/(app)/users/[uid]/edit/+page.svelte 97:5  root stylesheet
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/+page.ts:21:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export async function load({ fetch, parent, url }) {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) redirectToLogin(url.pathname, url.searchParams);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/+page.ts:37:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/+layout.ts:15:14
[@churros/app]: Error: Type '() => Promise<LayoutParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<LayoutParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'LayoutParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/display.ts:131:14
[@churros/app]: Error: Property '[NotificationChannel.Mandatory]' is missing in type '{ Articles: string; Shotguns: string; Comments: string; GodparentRequests: string; GroupBoard: string; Permissions: string; Other: string; }' but required in type 'Record<NotificationChannel, string>'. 
[@churros/app]: 
[@churros/app]: export const DISPLAY_NOTIFICATION_CHANNELS: Record<NotificationChannel, string> = {
[@churros/app]:   Articles: 'Posts',
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/display.ts:152:14
[@churros/app]: Error: Property '[NotificationChannel.Mandatory]' is missing in type '{ Articles: typeof LogoLydia; Shotguns: typeof LogoLydia; Comments: typeof LogoLydia; GodparentRequests: typeof LogoLydia; GroupBoard: typeof LogoLydia; Other: typeof LogoLydia; Permissions: typeof LogoLydia; }' but required in type 'Record<NotificationChannel, typeof SvelteComponent<any>>'. 
[@churros/app]: // eslint-disable-next-line @typescript-eslint/no-explicit-any
[@churros/app]: export const ICONS_NOTIFICATION_CHANNELS: Record<NotificationChannel, typeof SvelteComponent<any>> =
[@churros/app]:   {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/answer/[[section]]/+page.server.ts:30:13
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationAnswerFormSectionSuccess': { __typename: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationAnswerFormSectionSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; _...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationAnswerFormSectionSuccess': { __typename: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationAnswerFormSectionSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typename?...'. 
[@churros/app]:             },
[@churros/app]:             {
[@churros/app]:               '__typename': true,
[@churros/app]:               '...on Error': {
[@churros/app]:                 message: true,
[@churros/app]:               },
[@churros/app]:               '...on MutationAnswerFormSectionSuccess': {
[@churros/app]:                 __typename: true,
[@churros/app]:               },
[@churros/app]:             },
[@churros/app]:           ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/answer/[[section]]/+page.ts:110:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/answered/+page.ts:22:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/answers/+page.ts:57:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/answers/+layout.ts:20:14
[@churros/app]: Error: Type '() => Promise<LayoutParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<LayoutParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'LayoutParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/answers/analytics/+page.ts:52:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/[form]/edit/+page.ts:73:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/forms/create/+page.ts:18:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/+layout.ts:5:11
[@churros/app]: Error: Property 'me' does not exist on type 'LayoutParentData'. 
[@churros/app]: export const load = (async ({ fetch, params, parent }) => {
[@churros/app]:   const { me, token } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/+layout.ts:5:15
[@churros/app]: Error: Property 'token' does not exist on type 'LayoutParentData'. 
[@churros/app]: export const load = (async ({ fetch, params, parent }) => {
[@churros/app]:   const { me, token } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/+layout.ts:21:4
[@churros/app]: Error: Type '({ fetch, params, parent }: LoadEvent<LayoutParams, null, LayoutParentData, LayoutRouteId>) => Promise<{ canEditGroup: boolean; canListPages?: undefined; } | { ...; }>' does not satisfy the expected type 'LayoutLoad'.
[@churros/app]:   Type 'Promise<{ canEditGroup: boolean; canListPages?: undefined; } | { canEditGroup: boolean; canListPages: boolean; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ canEditGroup: boolean; canListPages?: undefined; } | { canEditGroup: boolean; canListPages: boolean; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ canEditGroup: boolean; canListPages?: undefined; } | { canEditGroup: boolean; canListPages: boolean; }' is not assignable to type 'Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Type '{ canEditGroup: boolean; canListPages?: undefined; }' is not assignable to type 'Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:           Property 'mobile' is missing in type '{ canEditGroup: boolean; canListPages?: undefined; }' but required in type 'Omit<PageData, RequiredKeys<LayoutParentData>>'. 
[@churros/app]:   };
[@churros/app]: }) satisfies LayoutLoad;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/quick-signups/manage/+page.ts:5:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export async function load({ fetch, parent, url }) {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/quick-signups/manage/+page.ts:17:59
[@churros/app]: Error: Property 'timestamp' is missing in type '{ dark: false; }' but required in type '{ dark: boolean | Variable<any, string>; timestamp: boolean | Variable<any, string>; }'. 
[@churros/app]:             expired: true,
[@churros/app]:             school: { uid: true, name: true, pictureURL: [{ dark: false }, true], color: true },
[@churros/app]:           },
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/authorize/+page.ts:20:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export async function load({ parent, url, fetch }) {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname, Object.fromEntries(url.searchParams.entries()));
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/authorize/+page.ts:37:11
[@churros/app]: Error: Property 'allowedApps' does not exist on type '{ allowedApps: { clientId: string; }[]; } | undefined'. 
[@churros/app]:     thirdPartyApp,
[@churros/app]:     me: { allowedApps },
[@churros/app]:   } = await loadQuery(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/authorize/+page.ts:62:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/authorize/+page.ts:65:25
[@churros/app]: Error: Parameter 'app' implicitly has an 'any' type. 
[@churros/app]: 
[@churros/app]:   if (allowedApps.some((app) => app.clientId === clientId)) {
[@churros/app]:     const { authorize } = await makeMutation(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/authorize/+page.ts:73:11
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on OAuth2Error': { code: true; message: true; }; '...on MutationAuthorizeSuccess': { data: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationAuthorizeSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on OAuth2Error": AliasType<...>...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on OAuth2Error': { code: true; message: true; }; '...on MutationAuthorizeSuccess': { data: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationAuthorizeSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on OAuth2Error": AliasType<...>; "...on Z...'. 
[@churros/app]:           },
[@churros/app]:           {
[@churros/app]:             '__typename': true,
[@churros/app]:             '...on Error': {
[@churros/app]:               message: true,
[@churros/app]:             },
[@churros/app]:             '...on OAuth2Error': {
[@churros/app]:               code: true,
[@churros/app]:               message: true,
[@churros/app]:             },
[@churros/app]:             '...on MutationAuthorizeSuccess': {
[@churros/app]:               data: true,
[@churros/app]:             },
[@churros/app]:           },
[@churros/app]:         ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/authorize/+page.ts:92:45
[@churros/app]: Error: Argument of type '{ state: string; error: unknown; error_description: unknown; } | { state: string; code: unknown; }' is not assignable to parameter of type 'string | Record<string, string> | URLSearchParams | string[][] | undefined'.
[@churros/app]:   Type '{ state: string; error: unknown; error_description: unknown; }' is not assignable to type 'string | Record<string, string> | URLSearchParams | string[][] | undefined'.
[@churros/app]:     Type '{ state: string; error: unknown; error_description: unknown; }' is not assignable to type 'undefined'. 
[@churros/app]:     const redirectTo = new URL(callbackUri);
[@churros/app]:     redirectTo.search = new URLSearchParams({
[@churros/app]:       ...(authorize.__typename === 'OAuth2Error'
[@churros/app]:         ? { error: authorize.code, error_description: authorize.message }
[@churros/app]:         : authorize.__typename === 'Error'
[@churros/app]:           ? { error: 'server_error', error_description: authorize.message }
[@churros/app]:           : { code: authorize.data }),
[@churros/app]:       state: csrfState,
[@churros/app]:     }).toString();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/connect/google/callback/+page.ts:6:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export async function load({ parent, url, fetch }) {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname, Object.fromEntries(url.searchParams.entries()));
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/connect/google/callback/+page.ts:16:9
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationRegisterGoogleCredentialSuccess': { data: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationRegisterGoogleCredentialSuccess": AliasType<...>; "...on ZodError": AliasType<...>; __typename?: boolean | ... 1 more ... | undefined; }>'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationRegisterGoogleCredentialSuccess': { data: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationRegisterGoogleCredentialSuccess": AliasType<...>; "...on ZodError": AliasType<...>; __typename?: boolean | ... 1 more ... | undefined; }'. 
[@churros/app]:         { code },
[@churros/app]:         {
[@churros/app]:           '__typename': true,
[@churros/app]:           '...on Error': {
[@churros/app]:             message: true,
[@churros/app]:           },
[@churros/app]:           '...on MutationRegisterGoogleCredentialSuccess': {
[@churros/app]:             data: true,
[@churros/app]:           },
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/connect/google/callback/+page.ts:34:18
[@churros/app]: Error: No overload matches this call.
[@churros/app]:   Overload 1 of 2, '(status: number, body: Error): never', gave the following error.
[@churros/app]:     Type 'unknown' is not assignable to type 'string'.
[@churros/app]:   Overload 2 of 2, '(status: number, body?: string | Error | undefined): never', gave the following error.
[@churros/app]:     Type 'unknown' is not assignable to type 'string'. 
[@churros/app]:   if (registerGoogleCredential.__typename === 'Error')
[@churros/app]:     error(400, { message: registerGoogleCredential.message });
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/kiosk/+page.ts:15:9
[@churros/app]: Error: Type '{ '...on MutationLoginSuccess': { data: { token: true; }; }; '...on AwaitingValidationError': { message: true; }; '...on Error': { message: true; }; }' is not assignable to type 'AliasType<{ "...on AwaitingValidationError": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on MutationLoginSuccess": Ali...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ '...on MutationLoginSuccess': { data: { token: true; }; }; '...on AwaitingValidationError': { message: true; }; '...on Error': { message: true; }; }' but required in type '{ "...on AwaitingValidationError": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on MutationLoginSuccess": AliasType<......'. 
[@churros/app]:         { email, password },
[@churros/app]:         {
[@churros/app]:           '...on MutationLoginSuccess': {
[@churros/app]:             data: { token: true },
[@churros/app]:           },
[@churros/app]:           '...on AwaitingValidationError': {
[@churros/app]:             message: true,
[@churros/app]:           },
[@churros/app]:           '...on Error': {
[@churros/app]:             message: true,
[@churros/app]:           },
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/kiosk/+page.ts:31:38
[@churros/app]: Error: No overload matches this call.
[@churros/app]:   Overload 1 of 2, '(status: number, body: Error): never', gave the following error.
[@churros/app]:     Argument of type 'unknown' is not assignable to parameter of type 'Error'.
[@churros/app]:   Overload 2 of 2, '(status: number, body?: string | Error | undefined): never', gave the following error.
[@churros/app]:     Argument of type 'unknown' is not assignable to parameter of type 'string | Error | undefined'. 
[@churros/app]: 
[@churros/app]:   if ('message' in login) error(401, login.message);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/kiosk/+page.ts:49:26
[@churros/app]: Error: Property 'timestamp' is missing in type '{ dark: false; }' but required in type '{ dark: boolean | Variable<any, string>; timestamp: boolean | Variable<any, string>; }'. 
[@churros/app]:             location: true,
[@churros/app]:             pictureURL: [{ dark: false }, true],
[@churros/app]:             group: {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/kiosk/+page.ts:68:21
[@churros/app]: Error: 'login.data' is of type 'unknown'. 
[@churros/app]:     },
[@churros/app]:     { fetch, token: login.data.token },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/kiosk/+page.ts:71:7
[@churros/app]: Error: 'events' is possibly 'undefined'. 
[@churros/app]: 
[@churros/app]:   if (events.nodes.length === 0)
[@churros/app]:     error(400, "Aucun évènement à venir n'est éligible au mode kiosque");
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(external)/kiosk/+page.ts:74:12
[@churros/app]: Error: Spread types may only be created from object types. 
[@churros/app]: 
[@churros/app]:   return { ...login.data, events };
[@churros/app]: }
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/developers/+layout.ts:4:11
[@churros/app]: Error: Property 'me' does not exist on type '{ RootLayout: RootLayoutStore; }'. 
[@churros/app]: export async function load({ parent, url }) {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/developers/apps/+page.ts:15:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export async function load({ fetch, parent, url }) {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname, Object.fromEntries(url.searchParams.entries()));
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/developers/apps/+page.ts:29:29
[@churros/app]: Error: Property 'token' does not exist on type 'PageParentData'. 
[@churros/app]:           // XXX dunno why this is needed
[@churros/app]:           token: parentData.token!,
[@churros/app]:         };
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/developers/apps/[id]/+page.ts:37:27
[@churros/app]: Error: Property 'token' does not exist on type 'PageParentData'. 
[@churros/app]:         // XXX dunno why this is needed
[@churros/app]:         token: parentData.token!,
[@churros/app]:       }),
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AreaContribute.svelte:75:9
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationContributeSuccess': { data: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationContributeSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; ...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationContributeSuccess': { data: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationContributeSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typename...'. (ts)
[@churros/app]:         },
[@churros/app]:         {
[@churros/app]:           '__typename': true,
[@churros/app]:           '...on Error': { message: true },
[@churros/app]:           '...on MutationContributeSuccess': { data: true },
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AreaContribute.svelte:85:7
[@churros/app]: Error: Type 'unknown' is not assignable to type 'string'. (ts)
[@churros/app]:     if (contribute.__typename === 'Error') {
[@churros/app]:       contributeServerError = contribute.message;
[@churros/app]:     } else {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AreaEditLinks.svelte:132:27
[@churros/app]: Error: Argument of type 'QueryResult<UpdateLink$result, UpdateLink$input> | undefined' is not assignable to parameter of type 'MutationResult<"updateLink", { readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess"> | undefined'.
[@churros/app]:   Type 'QueryResult<UpdateLink$result, UpdateLink$input>' is not assignable to type 'MutationResult<"updateLink", { readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess">'.
[@churros/app]:     Types of property 'data' are incompatible.
[@churros/app]:       Type 'UpdateLink$result | null' is not assignable to type 'Record<"updateLink", OperationResult<{ readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess">> | null | undefined'.
[@churros/app]:         Type 'UpdateLink$result' is not assignable to type 'Record<"updateLink", OperationResult<{ readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess">>'.
[@churros/app]:           Types of property 'updateLink' are incompatible.
[@churros/app]:             Type '{ readonly __typename: string | null; } & ({ readonly data: { readonly " $fragments": { AreaEditLinks_Link: {}; }; }; readonly __typename: "MutationUpdateLinkSuccess"; } | { readonly message: string; readonly __typename: "Error"; } | { ...; })' is not assignable to type 'OperationResult<{ readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess">'.
[@churros/app]:               Type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { AreaEditLinks_Link: {}; }; }; readonly __typename: "MutationUpdateLinkSuccess"; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess">'.
[@churros/app]:                 Type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { AreaEditLinks_Link: {}; }; }; readonly __typename: "MutationUpdateLinkSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly " $fragments": { AreaEditLinks_Link: {}; }; }, unknown, "MutationUpdateLinkSuccess">'.
[@churros/app]:                   Property '' $fragments'' is missing in type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { AreaEditLinks_Link: {}; }; }; readonly __typename: "MutationUpdateLinkSuccess"; }' but required in type '{ data: { readonly " $fragments": { AreaEditLinks_Link: {}; }; }; ' $fragments': unknown; __typename: "MutationUpdateLinkSuccess"; }'. (ts)
[@churros/app]:           });
[@churros/app]:           toasts.mutation(result, 'updateLink', '', 'Impossible de changer le texte du lien');
[@churros/app]:         }}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AreaEditLinks.svelte:145:27
[@churros/app]: Error: Argument of type 'QueryResult<UpdateLink$result, UpdateLink$input> | undefined' is not assignable to parameter of type 'MutationResult<"updateLink", { readonly " $fragments": { AreaEditLinks_Link: {}; }; }, never, unknown, "MutationUpdateLinkSuccess"> | undefined'. (ts)
[@churros/app]:           });
[@churros/app]:           toasts.mutation(result, 'updateLink', '', "Impossible de changer l'adresse du lien");
[@churros/app]:         }}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AreaEditLinks.svelte:172:29
[@churros/app]: Error: Argument of type 'QueryResult<RemoveLink$result, RemoveLink$input> | undefined' is not assignable to parameter of type 'MutationResult<"deleteLink", { readonly id: string; }, never, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this"> | undefined'.
[@churros/app]:   Type 'QueryResult<RemoveLink$result, RemoveLink$input>' is not assignable to type 'MutationResult<"deleteLink", { readonly id: string; }, never, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:     Types of property 'data' are incompatible.
[@churros/app]:       Type 'RemoveLink$result | null' is not assignable to type 'Record<"deleteLink", OperationResult<{ readonly id: string; }, never, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this">> | null | undefined'.
[@churros/app]:         Type 'RemoveLink$result' is not assignable to type 'Record<"deleteLink", OperationResult<{ readonly id: string; }, never, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this">>'.
[@churros/app]:           Types of property 'deleteLink' are incompatible.
[@churros/app]:             Type '{ readonly __typename: string | null; } & ({ readonly data: { readonly id: string; }; readonly __typename: "MutationDeleteLinkSuccess"; } | { readonly message: string; readonly __typename: "Error"; } | { ...; })' is not assignable to type 'OperationResult<{ readonly id: string; }, never, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:               Type '{ readonly __typename: string | null; } & { readonly data: { readonly id: string; }; readonly __typename: "MutationDeleteLinkSuccess"; }' is not assignable to type 'OperationResult<{ readonly id: string; }, never, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:                 Type '{ readonly __typename: string | null; } & { readonly data: { readonly id: string; }; readonly __typename: "MutationDeleteLinkSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly id: string; }, unknown, "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:                   Property '' $fragments'' is missing in type '{ readonly __typename: string | null; } & { readonly data: { readonly id: string; }; readonly __typename: "MutationDeleteLinkSuccess"; }' but required in type '{ data: { readonly id: string; }; ' $fragments': unknown; __typename: "MutationDeleteLinkSuccess" | "non-exhaustive; don't match this"; }'. (ts)
[@churros/app]:             );
[@churros/app]:             toasts.mutation(result, 'deleteLink', '', 'Impossible de supprimer le lien');
[@churros/app]:           }}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AreaEditLinks.svelte:217:31
[@churros/app]: Error: Argument of type 'QueryResult<AddLink$result, AddLink$input>' is not assignable to parameter of type 'MutationResult<"addLinks", { readonly " $fragments": { AreaEditLinks: {}; }; }, never, unknown, "MutationAddLinksSuccess">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'AddLink$result | null' is not assignable to type 'Record<"addLinks", OperationResult<{ readonly " $fragments": { AreaEditLinks: {}; }; }, never, unknown, "MutationAddLinksSuccess">> | null | undefined'.
[@churros/app]:       Type 'AddLink$result' is not assignable to type 'Record<"addLinks", OperationResult<{ readonly " $fragments": { AreaEditLinks: {}; }; }, never, unknown, "MutationAddLinksSuccess">>'.
[@churros/app]:         Types of property 'addLinks' are incompatible.
[@churros/app]:           Type '{ readonly __typename: string | null; } & ({ readonly data: { readonly " $fragments": { AreaEditLinks: {}; }; }; readonly __typename: "MutationAddLinksSuccess"; } | { readonly message: string; readonly __typename: "Error"; } | { ...; })' is not assignable to type 'OperationResult<{ readonly " $fragments": { AreaEditLinks: {}; }; }, never, unknown, "MutationAddLinksSuccess">'.
[@churros/app]:             Type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { AreaEditLinks: {}; }; }; readonly __typename: "MutationAddLinksSuccess"; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { AreaEditLinks: {}; }; }, never, unknown, "MutationAddLinksSuccess">'.
[@churros/app]:               Type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { AreaEditLinks: {}; }; }; readonly __typename: "MutationAddLinksSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly " $fragments": { AreaEditLinks: {}; }; }, unknown, "MutationAddLinksSuccess">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { AreaEditLinks: {}; }; }; readonly __typename: "MutationAddLinksSuccess"; }' but required in type '{ data: { readonly " $fragments": { AreaEditLinks: {}; }; }; ' $fragments': unknown; __typename: "MutationAddLinksSuccess"; }'. (ts)
[@churros/app]:           if (!result) return;
[@churros/app]:           if (toasts.mutation(result, 'addLinks', '', 'Impossible de rajouter le lien')) {
[@churros/app]:             newLink = {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/Badge.svelte:19:15
[@churros/app]: Error: Element implicitly has an 'any' type because expression of type '"warning" | "success" | "danger" | "info"' can't be used to index type '{ readonly success: typeof default; readonly warning: typeof default; readonly danger: typeof default; }'.
[@churros/app]:   Property 'info' does not exist on type '{ readonly success: typeof default; readonly warning: typeof default; readonly danger: typeof default; }'. (ts)
[@churros/app]: 
[@churros/app]:   $: icon ??= DEFAULT_ICONS[theme];
[@churros/app]: </script>
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/CardBooking.svelte:77:22
[@churros/app]: Error: Argument of type '"/events/[id]/my-bookings"' is not assignable to parameter of type 'FunctionKeys<{ 'GET /[entity=entity_handle]': (entity: string, params?: {} | undefined) => string; 'GET /bookings/[code].pdf': (code: string | number, params?: {} | undefined) => string; 'GET /events/[id]/[slug]/[...path]': (params: { ...; }) => string; ... 127 more ...; '/signup/finish/[token]': (token: string | nu...'. (ts)
[@churros/app]:     <a
[@churros/app]:       href={refroute('/events/[id]/my-bookings', loading($data.localID, ''))}
[@churros/app]:       class="more-bookings"
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/AvatarMajor.svelte:25:48
[@churros/app]: Error: Argument of type '"/majors/[uid]"' is not assignable to parameter of type 'FunctionKeys<{ 'GET /[entity=entity_handle]': (entity: string, params?: {} | undefined) => string; 'GET /bookings/[code].pdf': (code: string | number, params?: {} | undefined) => string; 'GET /events/[id]/[slug]/[...path]': (params: { ...; }) => string; ... 127 more ...; '/signup/finish/[token]': (token: string | nu...'. (ts)
[@churros/app]:     src={$data.pictureURL}
[@churros/app]:     href={mapLoading($data.uid, (uid) => route('/majors/[uid]', uid))}
[@churros/app]:     help={notooltip ? '' : $data.name}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormAnnouncement.svelte:82:9
[@churros/app]: Error: Argument of type 'QueryResult<UpsertAnnouncement$result, UpsertAnnouncement$input>' is not assignable to parameter of type 'MutationResult<"upsertAnnouncement", { readonly " $fragments": { FormAnnouncement: {}; }; }, never, unknown, "MutationUpsertAnnouncementSuccess">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'UpsertAnnouncement$result | null' is not assignable to type 'Record<"upsertAnnouncement", OperationResult<{ readonly " $fragments": { FormAnnouncement: {}; }; }, never, unknown, "MutationUpsertAnnouncementSuccess">> | null | undefined'.
[@churros/app]:       Type 'UpsertAnnouncement$result' is not assignable to type 'Record<"upsertAnnouncement", OperationResult<{ readonly " $fragments": { FormAnnouncement: {}; }; }, never, unknown, "MutationUpsertAnnouncementSuccess">>'.
[@churros/app]:         Types of property 'upsertAnnouncement' are incompatible.
[@churros/app]:           Type '{ readonly data: { readonly " $fragments": { FormAnnouncement: {}; }; }; readonly __typename: "MutationUpsertAnnouncementSuccess"; } | { readonly message: string; readonly __typename: "Error"; } | { ...; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { FormAnnouncement: {}; }; }, never, unknown, "MutationUpsertAnnouncementSuccess">'.
[@churros/app]:             Type '{ readonly data: { readonly " $fragments": { FormAnnouncement: {}; }; }; readonly __typename: "MutationUpsertAnnouncementSuccess"; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { FormAnnouncement: {}; }; }, never, unknown, "MutationUpsertAnnouncementSuccess">'.
[@churros/app]:               Type '{ readonly data: { readonly " $fragments": { FormAnnouncement: {}; }; }; readonly __typename: "MutationUpsertAnnouncementSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly " $fragments": { FormAnnouncement: {}; }; }, unknown, "MutationUpsertAnnouncementSuccess">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly data: { readonly " $fragments": { FormAnnouncement: {}; }; }; readonly __typename: "MutationUpsertAnnouncementSuccess"; }' but required in type '{ data: { readonly " $fragments": { FormAnnouncement: {}; }; }; ' $fragments': unknown; __typename: "MutationUpsertAnnouncementSuccess"; }'. (ts)
[@churros/app]:       toasts.mutation(
[@churros/app]:         result,
[@churros/app]:         'upsertAnnouncement',
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormArticle.houdini.svelte:152:5
[@churros/app]: Error: Object literal may only specify known properties, and 'links' does not exist in type 'Omit<UpdateArticle$input, "group" | "eventId">'. (ts)
[@churros/app]:     id: '',
[@churros/app]:     links: [],
[@churros/app]:     publishedAt: new Date(),
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormArticle.houdini.svelte:232:13
[@churros/app]: Error: Argument of type 'QueryResult<UpdateArticle$result, UpdateArticle$input>' is not assignable to parameter of type 'MutationResult<"upsertArticle", { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }, never, unknown, "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'UpdateArticle$result | null' is not assignable to type 'Record<"upsertArticle", OperationResult<{ readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }, never, unknown, "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this">> | null | undefined'.
[@churros/app]:       Type 'UpdateArticle$result' is not assignable to type 'Record<"upsertArticle", OperationResult<{ readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }, never, unknown, "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this">>'.
[@churros/app]:         Types of property 'upsertArticle' are incompatible.
[@churros/app]:           Type '{ readonly message: string; readonly __typename: "Error"; } | { readonly data: { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }; readonly __typename: "MutationUpsertArticleSuccess"; } | { ...; }' is not assignable to type 'OperationResult<{ readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }, never, unknown, "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:             Type '{ readonly data: { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }; readonly __typename: "MutationUpsertArticleSuccess"; }' is not assignable to type 'OperationResult<{ readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }, never, unknown, "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:               Type '{ readonly data: { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }; readonly __typename: "MutationUpsertArticleSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }, unknown, "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly data: { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }; readonly __typename: "MutationUpsertArticleSuccess"; }' but required in type '{ data: { readonly localID: string; readonly group: { readonly uid: string; }; readonly " $fragments": { FormArticle: {}; }; }; ' $fragments': unknown; __typename: "MutationUpsertArticleSuccess" | "non-exhaustive; don't match this"; }'. (ts)
[@churros/app]:           toasts.mutation(
[@churros/app]:             result,
[@churros/app]:             'upsertArticle',
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormArticle.houdini.svelte:366:47
[@churros/app]: Error: Property 'links' does not exist on type 'Omit<UpdateArticle$input, "group" | "eventId">'. (ts)
[@churros/app]:   </section>
[@churros/app]:   <InputLinks label="Liens" bind:value={input.links} />
[@churros/app]:   {#if serverError}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:58:9
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpsertDocumentSuccess': { data: { id: true; title: true; subject: { uid: true; yearTier: true; forApprentices: true; majors: { uid: true; }; minors: { ...; }; }; uid: true; }; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpsertDocumentSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __ty...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpsertDocumentSuccess': { data: { id: true; title: true; subject: { uid: true; yearTier: true; forApprentices: true; majors: { uid: true; }; minors: { ...; }; }; uid: true; }; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpsertDocumentSuccess": AliasType<{ data?: AliasType<{ ...; }> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typenam...'. (ts)
[@churros/app]:         },
[@churros/app]:         {
[@churros/app]:           '__typename': true,
[@churros/app]:           '...on Error': { message: true },
[@churros/app]:           '...on MutationUpsertDocumentSuccess': {
[@churros/app]:             data: {
[@churros/app]:               id: true,
[@churros/app]:               title: true,
[@churros/app]:               subject: {
[@churros/app]:                 uid: true,
[@churros/app]:                 yearTier: true,
[@churros/app]:                 forApprentices: true,
[@churros/app]:                 majors: { uid: true },
[@churros/app]:                 minors: { uid: true, yearTier: true, majors: { uid: true } },
[@churros/app]:               },
[@churros/app]:               uid: true,
[@churros/app]:             },
[@churros/app]:           },
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:79:7
[@churros/app]: Error: Type 'unknown' is not assignable to type 'string'. (ts)
[@churros/app]:     if (upsertDocument.__typename === 'Error') {
[@churros/app]:       serverError = upsertDocument.message;
[@churros/app]:       toasts.error(`Impossible de sauvegarder`, serverError);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:91:31
[@churros/app]: Error: 'upsertDocument.data' is of type 'unknown'. (ts)
[@churros/app]:                 {
[@churros/app]:                   documentId: upsertDocument.data.id,
[@churros/app]:                   file: Zvar('file', 'File!'),
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:111:27
[@churros/app]: Error: 'upsertDocument.data' is of type 'unknown'. (ts)
[@churros/app]:             {
[@churros/app]:               documentId: upsertDocument.data.id,
[@churros/app]:               filename: path,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:124:27
[@churros/app]: Error: 'upsertDocument.data' is of type 'unknown'. (ts)
[@churros/app]:             {
[@churros/app]:               documentId: upsertDocument.data.id,
[@churros/app]:               filename: path,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:133:13
[@churros/app]: Error: Property 'subject' does not exist on type 'unknown'. (ts)
[@churros/app]:     );
[@churros/app]:     const { subject } = upsertDocument.data;
[@churros/app]:     const majorUid =
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:137:43
[@churros/app]: Error: 'upsertDocument.data' is of type 'unknown'. (ts)
[@churros/app]:     const yearTier = subject?.yearTier ?? subject?.minors[0]?.yearTier ?? $me?.yearTier;
[@churros/app]:     toasts.success('Document modifié', `${upsertDocument.data.title} a bien été modifié.`);
[@churros/app]:     await goto(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormDocument.svelte:141:11
[@churros/app]: Error: 'upsertDocument.data' is of type 'unknown'. (ts)
[@churros/app]:         subject?.uid ?? 'all'
[@churros/app]:       }/${upsertDocument.data.uid}`,
[@churros/app]:     );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEventTicket.svelte:186:15
[@churros/app]: Error: Object literal may only specify known properties, and 'name' does not exist in type '[{ discontinued: boolean | Variable<any, string>; }, AliasType<{ discontinued?: boolean | `@${string}` | undefined; hasSeparateDarkPicture?: boolean | `@${string}` | undefined; id?: boolean | ... 1 more ... | undefined; ... 11 more ...; __typename?: boolean | ... 1 more ... | undefined; }>]'. (ts)
[@churros/app]:             majors: {
[@churros/app]:               name: true,
[@churros/app]:               shortName: true,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEvent.svelte:72:13
[@churros/app]: Error: Property 'upsertEvent' does not exist on type '{ login: ({ [x: string]: unknown; } | { [x: string]: unknown; } | { [x: string]: unknown; } | { [x: string]: unknown; }) & {}; logout: boolean | `@${string}` | undefined; authorize: ({ [x: string]: unknown; } | { [x: string]: unknown; } | { [x: string]: unknown; } | { ...; }) & {}; ... 145 more ...; verifyBooking: (...'. (ts)
[@churros/app]:     loading = true;
[@churros/app]:     const { upsertEvent } = await $zeus.mutate({
[@churros/app]:       upsertEvent: [
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEvent.svelte:73:7
[@churros/app]: Error: Object literal may only specify known properties, and 'upsertEvent' does not exist in type '{ acceptRegistration?: [{ email: string | Variable<any, string>; }, AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationAcceptRegistrationSuccess": AliasType<...>; "...on ZodError": AliasType<...>; __typename?: boole...'. (ts)
[@churros/app]:     const { upsertEvent } = await $zeus.mutate({
[@churros/app]:       upsertEvent: [
[@churros/app]:         {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEvent.svelte:231:24
[@churros/app]: Error: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type 'Record<Visibility$options, string>'. (ts)
[@churros/app]:     toasts.success(
[@churros/app]:       `Ton évènement ${DISPLAY_VISIBILITIES[
[@churros/app]:         upsertEvent.data.visibility
[@churros/app]:       ].toLowerCase()} a bien été ${event.uid ? 'modifié' : 'créé'}`,
[@churros/app]:     );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEvent.svelte:755:57
[@churros/app]: Error: Property 'readonly' does not exist on type 'Record<EventManagerPowerLevel$options, string>'. Did you mean 'ReadOnly'? (ts)
[@churros/app]:                 {...manager.user}
[@churros/app]:                 role={DISPLAY_MANAGER_PERMISSION_LEVELS[levelFromPermissions(manager)]}
[@churros/app]:               />
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEvent.svelte:826:50
[@churros/app]: Error: Type 'true' has no properties in common with type 'AliasType<{ articles?: AliasType<{ author?: AliasType<{ address?: boolean | `@${string}` | undefined; admin?: boolean | `@${string}` | undefined; adminOf?: [{ studentAssociation: string | Variable<any, string>; }, boolean | `@${string}`] | undefined; ... 64 more ...; __typename?: boolean | ... 1 more ... | undefined...'. (ts)
[@churros/app]:                   await $zeus.mutate({
[@churros/app]:                     deleteEventPicture: [{ id }, true],
[@churros/app]:                     deleteEvent: [{ id }, true],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormEvent.svelte:827:43
[@churros/app]: Error: Type 'boolean' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationDeleteEventSuccess": AliasType<{ data?: AliasType<{ ...; }> | undefined; didSoftDelete?: boolean | ... 1 more ... | undefined; __typename?: boolean | ... 1 more ......'.
[@churros/app]:   Type 'boolean' is not assignable to type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationDeleteEventSuccess": AliasType<{ data?: AliasType<{ articles?: AliasType<...> | undefined; ... 63 more ...; __typename?: boolean | ... 1 more ... | undefined; }> | undefined;...'. (ts)
[@churros/app]:                     deleteEventPicture: [{ id }, true],
[@churros/app]:                     deleteEvent: [{ id }, true],
[@churros/app]:                   });
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+page.ts:54:14
[@churros/app]: Error: Type '({ fetch, params, url, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/groups/[uid]/edit">) => Promise<{ group: { uid: string; address: string; description: string; ... 17 more ...; website: string; }; lydiaAccountsOfGroup: { ...; }[]; schoolGroups: { ...; }[]; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ group: { uid: string; address: string; description: string; email?: string | undefined; id: string; links: { name: string; value: string; }[]; pictureFile: string; pictureFileDark: string; name: string; ... 11 more ...; website: string; }; lydiaAccountsOfGroup: { ...; }[]; schoolGroups: { ...; }[]; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ group: { uid: string; address: string; description: string; email?: string | undefined; id: string; links: { name: string; value: string; }[]; pictureFile: string; pictureFileDark: string; name: string; ... 11 more ...; website: string; }; lydiaAccountsOfGroup: { ...; }[]; schoolGroups: { ...; }[]; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ group: { uid: string; address: string; description: string; email?: string | undefined; id: string; links: { name: string; value: string; }[]; pictureFile: string; pictureFileDark: string; name: string; ... 11 more ...; website: string; }; lydiaAccountsOfGroup: { ...; }[]; schoolGroups: { ...; }[]; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ group: { uid: string; address: string; description: string; email?: string | undefined; id: string; links: { name: string; value: string; }[]; pictureFile: string; pictureFileDark: string; name: string; ... 11 more ...; website: string; }; lydiaAccountsOfGroup: { ...; }[]; schoolGroups: { ...; }[]; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, params, url, parent }) => {
[@churros/app]:   const { me, token, canEditGroup } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+page.ts:55:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, params, url, parent }) => {
[@churros/app]:   const { me, token, canEditGroup } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+page.ts:55:15
[@churros/app]: Error: Property 'token' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, params, url, parent }) => {
[@churros/app]:   const { me, token, canEditGroup } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+page.ts:60:24
[@churros/app]: Error: Binding element 'group' implicitly has an 'any' type. 
[@churros/app]:     !canEditGroup &&
[@churros/app]:     !me.groups.some(({ group, canEditMembers }) => canEditMembers && group.uid === params.uid)
[@churros/app]:   )
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+page.ts:60:31
[@churros/app]: Error: Binding element 'canEditMembers' implicitly has an 'any' type. 
[@churros/app]:     !canEditGroup &&
[@churros/app]:     !me.groups.some(({ group, canEditMembers }) => canEditMembers && group.uid === params.uid)
[@churros/app]:   )
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormGroup.svelte:138:64
[@churros/app]: Error: Type 'string | undefined' is not assignable to type 'string'.
[@churros/app]:   Type 'undefined' is not assignable to type 'string'. (ts)
[@churros/app]:     <InputText label="Salle" maxlength={255} bind:value={address} />
[@churros/app]:     <InputText label="Email" type="email" maxlength={255} bind:value={email} />
[@churros/app]:     <InputText label="Mailing list" type="email" maxlength={255} bind:value={mailingList} />
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ModalDeleteCustomPage.svelte:38:9
[@churros/app]: Error: Argument of type 'QueryResult<DeletePage$result, DeletePage$input>' is not assignable to parameter of type 'MutationResult<"deletePage", { readonly title: string; readonly id: string; }, never, unknown, "MutationDeletePageSuccess">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'DeletePage$result | null' is not assignable to type 'Record<"deletePage", OperationResult<{ readonly title: string; readonly id: string; }, never, unknown, "MutationDeletePageSuccess">> | null | undefined'.
[@churros/app]:       Type 'DeletePage$result' is not assignable to type 'Record<"deletePage", OperationResult<{ readonly title: string; readonly id: string; }, never, unknown, "MutationDeletePageSuccess">>'.
[@churros/app]:         Types of property 'deletePage' are incompatible.
[@churros/app]:           Type '{ readonly message: string; readonly __typename: "Error"; } | { readonly data: { readonly title: string; readonly id: string; }; readonly __typename: "MutationDeletePageSuccess"; } | { ...; }' is not assignable to type 'OperationResult<{ readonly title: string; readonly id: string; }, never, unknown, "MutationDeletePageSuccess">'.
[@churros/app]:             Type '{ readonly data: { readonly title: string; readonly id: string; }; readonly __typename: "MutationDeletePageSuccess"; }' is not assignable to type 'OperationResult<{ readonly title: string; readonly id: string; }, never, unknown, "MutationDeletePageSuccess">'.
[@churros/app]:               Type '{ readonly data: { readonly title: string; readonly id: string; }; readonly __typename: "MutationDeletePageSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly title: string; readonly id: string; }, unknown, "MutationDeletePageSuccess">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly data: { readonly title: string; readonly id: string; }; readonly __typename: "MutationDeletePageSuccess"; }' but required in type '{ data: { readonly title: string; readonly id: string; }; ' $fragments': unknown; __typename: "MutationDeletePageSuccess"; }'. (ts)
[@churros/app]:       toasts.mutation(
[@churros/app]:         result,
[@churros/app]:         'deletePage',
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormPage.svelte:233:19
[@churros/app]: Error: Argument of type 'QueryResult<AddFileToPage$result, AddFileToPage$input>' is not assignable to parameter of type 'MutationResult<"addFileToPage", { readonly " $fragments": { FormPage: {}; }; }, never, unknown, "MutationAddFileToPageSuccess">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'AddFileToPage$result | null' is not assignable to type 'Record<"addFileToPage", OperationResult<{ readonly " $fragments": { FormPage: {}; }; }, never, unknown, "MutationAddFileToPageSuccess">> | null | undefined'.
[@churros/app]:       Type 'AddFileToPage$result' is not assignable to type 'Record<"addFileToPage", OperationResult<{ readonly " $fragments": { FormPage: {}; }; }, never, unknown, "MutationAddFileToPageSuccess">>'.
[@churros/app]:         Types of property 'addFileToPage' are incompatible.
[@churros/app]:           Type '{ readonly message: string; readonly __typename: "Error"; } | { readonly fieldErrors: { readonly path: string[]; readonly message: string; }[]; readonly __typename: "ZodError"; } | { readonly data: { ...; }; readonly __typename: "MutationAddFileToPageSuccess"; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { FormPage: {}; }; }, never, unknown, "MutationAddFileToPageSuccess">'.
[@churros/app]:             Type '{ readonly data: { readonly " $fragments": { FormPage: {}; }; }; readonly __typename: "MutationAddFileToPageSuccess"; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { FormPage: {}; }; }, never, unknown, "MutationAddFileToPageSuccess">'.
[@churros/app]:               Type '{ readonly data: { readonly " $fragments": { FormPage: {}; }; }; readonly __typename: "MutationAddFileToPageSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly " $fragments": { FormPage: {}; }; }, unknown, "MutationAddFileToPageSuccess">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly data: { readonly " $fragments": { FormPage: {}; }; }; readonly __typename: "MutationAddFileToPageSuccess"; }' but required in type '{ data: { readonly " $fragments": { FormPage: {}; }; }; ' $fragments': unknown; __typename: "MutationAddFileToPageSuccess"; }'. (ts)
[@churros/app]:                 toasts.mutation(
[@churros/app]:                   result,
[@churros/app]:                   'addFileToPage',
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormPassword.svelte:35:11
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationResetPasswordSuccess': { data: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationResetPasswordSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<......'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationResetPasswordSuccess': { data: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationResetPasswordSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typen...'. (ts)
[@churros/app]:           },
[@churros/app]:           {
[@churros/app]:             '__typename': true,
[@churros/app]:             '...on Error': { message: true },
[@churros/app]:             '...on MutationResetPasswordSuccess': { data: true },
[@churros/app]:           },
[@churros/app]:         ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormPassword.svelte:43:9
[@churros/app]: Error: Type 'unknown' is not assignable to type 'string | undefined'. (ts)
[@churros/app]:       if (resetPassword.__typename === 'Error') {
[@churros/app]:         resetPasswordError = resetPassword.message;
[@churros/app]:       } else {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormPicture.svelte:69:21
[@churros/app]: Error: Argument of type 'QueryResult<DeletePicture$result, DeletePicture$input> | undefined' is not assignable to parameter of type 'MutationResult<"setPicture", { readonly __typename: unknown; }, never, unknown, "non-exhaustive; don't match this"> | undefined'.
[@churros/app]:   Type 'QueryResult<DeletePicture$result, DeletePicture$input>' is not assignable to type 'MutationResult<"setPicture", { readonly __typename: unknown; }, never, unknown, "non-exhaustive; don't match this">'.
[@churros/app]:     Types of property 'data' are incompatible.
[@churros/app]:       Type 'DeletePicture$result | null' is not assignable to type 'Record<"setPicture", OperationResult<{ readonly __typename: unknown; }, never, unknown, "non-exhaustive; don't match this">> | null | undefined'.
[@churros/app]:         Type 'DeletePicture$result' is not assignable to type 'Record<"setPicture", OperationResult<{ readonly __typename: unknown; }, never, unknown, "non-exhaustive; don't match this">>'.
[@churros/app]:           Types of property 'setPicture' are incompatible.
[@churros/app]:             Type '{ readonly __typename: string | null; } & ({ readonly alreadyDeleted: string; readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; } | { ...; } | { ...; })' is not assignable to type 'OperationResult<{ readonly __typename: unknown; }, never, unknown, "non-exhaustive; don't match this">'.
[@churros/app]:               Type '{ readonly __typename: string | null; } & { readonly alreadyDeleted: string; readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; }' is not assignable to type 'OperationResult<{ readonly __typename: unknown; }, never, unknown, "non-exhaustive; don't match this">'.
[@churros/app]:                 Type '{ readonly __typename: string | null; } & { readonly alreadyDeleted: string; readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly __typename: unknown; }, unknown, "non-exhaustive; don't match this">'.
[@churros/app]:                   Property '' $fragments'' is missing in type '{ readonly __typename: string | null; } & { readonly alreadyDeleted: string; readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; }' but required in type '{ data: { readonly __typename: unknown; }; ' $fragments': unknown; __typename: "non-exhaustive; don't match this"; }'. (ts)
[@churros/app]:     const result = await mutate(Delete, { resource: $data.id, variant: 'Light' });
[@churros/app]:     toasts.mutation(result, 'setPicture', 'Image supprimée', "Impossible de supprimer l'image");
[@churros/app]:   }
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormPicture.svelte:81:7
[@churros/app]: Error: Argument of type 'QueryResult<UpdatePicture$result, UpdatePicture$input> | undefined' is not assignable to parameter of type 'MutationResult<"setPicture", { readonly " $fragments": { FormPicture: {}; }; }, never, unknown, "MutationSetPictureSuccess"> | undefined'.
[@churros/app]:   Type 'QueryResult<UpdatePicture$result, UpdatePicture$input>' is not assignable to type 'MutationResult<"setPicture", { readonly " $fragments": { FormPicture: {}; }; }, never, unknown, "MutationSetPictureSuccess">'.
[@churros/app]:     Types of property 'data' are incompatible.
[@churros/app]:       Type 'UpdatePicture$result | null' is not assignable to type 'Record<"setPicture", OperationResult<{ readonly " $fragments": { FormPicture: {}; }; }, never, unknown, "MutationSetPictureSuccess">> | null | undefined'.
[@churros/app]:         Type 'UpdatePicture$result' is not assignable to type 'Record<"setPicture", OperationResult<{ readonly " $fragments": { FormPicture: {}; }; }, never, unknown, "MutationSetPictureSuccess">>'.
[@churros/app]:           Types of property 'setPicture' are incompatible.
[@churros/app]:             Type '{ readonly __typename: string | null; } & ({ readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; } | { readonly message: string; readonly __typename: "Error"; } | { ...; })' is not assignable to type 'OperationResult<{ readonly " $fragments": { FormPicture: {}; }; }, never, unknown, "MutationSetPictureSuccess">'.
[@churros/app]:               Type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; }' is not assignable to type 'OperationResult<{ readonly " $fragments": { FormPicture: {}; }; }, never, unknown, "MutationSetPictureSuccess">'.
[@churros/app]:                 Type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly " $fragments": { FormPicture: {}; }; }, unknown, "MutationSetPictureSuccess">'.
[@churros/app]:                   Property '' $fragments'' is missing in type '{ readonly __typename: string | null; } & { readonly data: { readonly " $fragments": { FormPicture: {}; }; }; readonly __typename: "MutationSetPictureSuccess"; }' but required in type '{ data: { readonly " $fragments": { FormPicture: {}; }; }; ' $fragments': unknown; __typename: "MutationSetPictureSuccess"; }'. (ts)
[@churros/app]:     toasts.mutation(
[@churros/app]:       result,
[@churros/app]:       'setPicture',
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormService.svelte:56:11
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpsertServiceSuccess': { data: { id: true; localID: true; name: true; url: true; description: true; logo: true; logoSourceType: true; importance: true; group: { ...; }; school: { ...; }; studentAssociation: { ...; }; }; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpsertServiceSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typ...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpsertServiceSuccess': { data: { id: true; localID: true; name: true; url: true; description: true; logo: true; logoSourceType: true; importance: true; group: { ...; }; school: { ...; }; studentAssociation: { ...; }; }; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpsertServiceSuccess": AliasType<{ data?: AliasType<{ ...; }> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typename...'. (ts)
[@churros/app]:           },
[@churros/app]:           {
[@churros/app]:             '__typename': true,
[@churros/app]:             '...on Error': { message: true },
[@churros/app]:             '...on MutationUpsertServiceSuccess': {
[@churros/app]:               data: {
[@churros/app]:                 id: true,
[@churros/app]:                 localID: true,
[@churros/app]:                 name: true,
[@churros/app]:                 url: true,
[@churros/app]:                 description: true,
[@churros/app]:                 logo: true,
[@churros/app]:                 logoSourceType: true,
[@churros/app]:                 importance: true,
[@churros/app]:                 group: {
[@churros/app]:                   id: true,
[@churros/app]:                   uid: true,
[@churros/app]:                   name: true,
[@churros/app]:                   pictureFile: true,
[@churros/app]:                   pictureFileDark: true,
[@churros/app]:                 },
[@churros/app]:                 school: { uid: true, name: true, id: true },
[@churros/app]:                 studentAssociation: { uid: true, name: true, id: true },
[@churros/app]:               },
[@churros/app]:             },
[@churros/app]:           },
[@churros/app]:         ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormService.svelte:85:9
[@churros/app]: Error: Type 'unknown' is not assignable to type 'string'. (ts)
[@churros/app]:       if (upsertService.__typename === 'Error') {
[@churros/app]:         serverError = upsertService.message;
[@churros/app]:         return;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormService.svelte:90:7
[@churros/app]: Error: Type 'unknown' is not assignable to type '{ id?: string | undefined; localID?: string | undefined; name: string; description: string; url: string; logo: string; logoSourceType: LogoSourceType; school?: { uid: string; name: string; id: string; } | undefined; studentAssociation?: { ...; } | undefined; group?: { ...; } | undefined; importance: number; }'. (ts)
[@churros/app]:       serverError = '';
[@churros/app]:       service = upsertService.data;
[@churros/app]:       if (service.localID) await goto(route('/services/[id]/edit', service.localID));
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:107:9
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpsertShopItemSuccess': { data: { uid: true; id: true; name: true; price: true; max: true; description: true; startsAt: true; endsAt: true; paymentMethods: true; group: { ...; }; lydiaAccount: { ...; }; visibility: true; }; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpsertShopItemSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __ty...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpsertShopItemSuccess': { data: { uid: true; id: true; name: true; price: true; max: true; description: true; startsAt: true; endsAt: true; paymentMethods: true; group: { ...; }; lydiaAccount: { ...; }; visibility: true; }; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpsertShopItemSuccess": AliasType<{ data?: AliasType<{ ...; }> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typenam...'. (ts)
[@churros/app]:         },
[@churros/app]:         {
[@churros/app]:           '__typename': true,
[@churros/app]:           '...on Error': { message: true },
[@churros/app]:           '...on MutationUpsertShopItemSuccess': {
[@churros/app]:             data: {
[@churros/app]:               uid: true,
[@churros/app]:               id: true,
[@churros/app]:               name: true,
[@churros/app]:               price: true,
[@churros/app]:               max: true,
[@churros/app]:               description: true,
[@churros/app]:               startsAt: true,
[@churros/app]:               endsAt: true,
[@churros/app]:               paymentMethods: true,
[@churros/app]:               group: {
[@churros/app]:                 uid: true,
[@churros/app]:               },
[@churros/app]:               lydiaAccount: {
[@churros/app]:                 id: true,
[@churros/app]:                 name: true,
[@churros/app]:               },
[@churros/app]:               visibility: true,
[@churros/app]:             },
[@churros/app]:           },
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:139:36
[@churros/app]: Error: 'upsertShopItem.data' is of type 'unknown'. (ts)
[@churros/app]:           {
[@churros/app]:             shopItemId: data.id || upsertShopItem.data.id,
[@churros/app]:             itemOptions: data.itemOptions,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:148:7
[@churros/app]: Error: Type 'unknown' is not assignable to type 'string'. (ts)
[@churros/app]:     if (upsertShopItem.__typename === 'Error') {
[@churros/app]:       serverError = upsertShopItem.message;
[@churros/app]:       toasts.error(`Impossible de sauvegarder`, serverError);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:153:29
[@churros/app]: Error: 'upsertShopItem.data' is of type 'unknown'. (ts)
[@churros/app]:     if (upsertShopItem.__typename === 'MutationUpsertShopItemSuccess')
[@churros/app]:       await goto(`/groups/${upsertShopItem.data.group.uid}/shop/${upsertShopItem.data.uid}/`);
[@churros/app]:   }
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:153:67
[@churros/app]: Error: 'upsertShopItem.data' is of type 'unknown'. (ts)
[@churros/app]:     if (upsertShopItem.__typename === 'MutationUpsertShopItemSuccess')
[@churros/app]:       await goto(`/groups/${upsertShopItem.data.group.uid}/shop/${upsertShopItem.data.uid}/`);
[@churros/app]:   }
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:209:28
[@churros/app]: Error: Object literal may only specify known properties, and '"label"' does not exist in type '{ value: boolean; }'. (ts)
[@churros/app]:             <div class="toggles">
[@churros/app]:               <InputToggle label={'Rendre obligatoire'} bind:value={itemOption.required} />
[@churros/app]:               <InputToggle label={"Autoriser champ 'autre'"} bind:value={itemOption.otherToggle} />
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:210:28
[@churros/app]: Error: Object literal may only specify known properties, and '"label"' does not exist in type '{ value: boolean; }'. (ts)
[@churros/app]:               <InputToggle label={'Rendre obligatoire'} bind:value={itemOption.required} />
[@churros/app]:               <InputToggle label={"Autoriser champ 'autre'"} bind:value={itemOption.otherToggle} />
[@churros/app]:             </div>
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:289:15
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationDeleteShopItemSuccess': { data: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationDeleteShopItemSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<.....'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationDeleteShopItemSuccess': { data: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationDeleteShopItemSuccess": AliasType<{ data?: boolean | `@${string}` | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __type...'. (ts)
[@churros/app]:               { itemId: data.id, groupUid: data.group.uid },
[@churros/app]:               {
[@churros/app]:                 '__typename': true,
[@churros/app]:                 '...on Error': { message: true },
[@churros/app]:                 '...on MutationDeleteShopItemSuccess': { data: true },
[@churros/app]:               },
[@churros/app]:             ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormShopItem.svelte:297:53
[@churros/app]: Error: Argument of type 'unknown' is not assignable to parameter of type 'string | undefined'. (ts)
[@churros/app]:           if (deleteShopItem.__typename === 'Error') {
[@churros/app]:             toasts.error('Impossible de supprimer', deleteShopItem.message);
[@churros/app]:           } else {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormUser.svelte:155:13
[@churros/app]: Error: Object literal may only specify known properties, and 'links' does not exist in type '{ address: string | Variable<any, string>; apprentice: boolean | Variable<any, string>; birthday?: unknown; cededImageRightsToTVn7: boolean | Variable<any, string>; ... 12 more ...; uid: unknown; }'. (ts)
[@churros/app]:             description,
[@churros/app]:             links: links.filter((l) => Boolean(l.value) && l.value.trim() !== '#'),
[@churros/app]:             address,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormUser.svelte:168:11
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpdateUserSuccess': { data: { uid: true; firstName: true; lastName: true; fullName: true; nickname: true; description: true; pictureFile: true; ... 11 more ...; contributesTo: { ...; }; }; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpdateUserSuccess": AliasType<{ data?: AliasType<{ address?: boolean | ... 1 more ... | undefined; ... 66 more ...; __typename?: boolean | ... 1 more ... | undefine...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationUpdateUserSuccess': { data: { uid: true; firstName: true; lastName: true; fullName: true; nickname: true; description: true; pictureFile: true; ... 11 more ...; contributesTo: { ...; }; }; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationUpdateUserSuccess": AliasType<{ data?: AliasType<{ address?: boolean | ... 1 more ... | undefined; ... 66 more ...; __typename?: boolean | ... 1 more ... | undefined; }> | un...'. (ts)
[@churros/app]:           },
[@churros/app]:           {
[@churros/app]:             '__typename': true,
[@churros/app]:             '...on Error': { message: true },
[@churros/app]:             '...on MutationUpdateUserSuccess': { data: userQuery },
[@churros/app]:           },
[@churros/app]:         ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormUser.svelte:177:61
[@churros/app]: Error: Argument of type 'unknown' is not assignable to parameter of type 'string | undefined'. (ts)
[@churros/app]:       if (updateUser.__typename === 'Error') {
[@churros/app]:         toasts.error('Impossible de sauvegarder le profil', updateUser.message);
[@churros/app]:         return;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormUser.svelte:181:11
[@churros/app]: Error: 'updateUser.data' is of type 'unknown'. (ts)
[@churros/app]: 
[@churros/app]:       if (updateUser.data.email === email) {
[@churros/app]:         toasts.success('Profil sauvegardé');
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormUser.svelte:192:35
[@churros/app]: Error: Spread types may only be created from object types. (ts)
[@churros/app]:       // eslint-disable-next-line unicorn/no-null
[@churros/app]:       data.user = { ...data.user, ...updateUser.data, birthday: updateUser.data.birthday ?? null };
[@churros/app]:       emit('save');
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/FormUser.svelte:192:65
[@churros/app]: Error: 'updateUser.data' is of type 'unknown'. (ts)
[@churros/app]:       // eslint-disable-next-line unicorn/no-null
[@churros/app]:       data.user = { ...data.user, ...updateUser.data, birthday: updateUser.data.birthday ?? null };
[@churros/app]:       emit('save');
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/InputEvent.svelte:52:3
[@churros/app]: Error: Type 'Event[]' is not assignable to type '{ uid: string; id: string; pictureFile: string; title: string; visibility: Visibility; startsAt?: Date | undefined; }[]'.
[@churros/app]:   Type 'Event' is not assignable to type '{ uid: string; id: string; pictureFile: string; title: string; visibility: Visibility; startsAt?: Date | undefined; }'.
[@churros/app]:     Types of property 'visibility' are incompatible.
[@churros/app]:       Type 'Visibility | Visibility$options' is not assignable to type 'Visibility'.
[@churros/app]:         Type '"GroupRestricted"' is not assignable to type 'Visibility'. (ts)
[@churros/app]: <InputPickObjects
[@churros/app]:   options={suggestions}
[@churros/app]:   {clearable}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/InputEvent.svelte:57:8
[@churros/app]: Error: Type 'Event | null | undefined' is not assignable to type '{ uid: string; id: string; pictureFile: string; title: string; visibility: Visibility; startsAt?: Date | undefined; } | null | undefined'.
[@churros/app]:   Type 'Event' is not assignable to type '{ uid: string; id: string; pictureFile: string; title: string; visibility: Visibility; startsAt?: Date | undefined; }'. (ts)
[@churros/app]:   searchKeys={['title']}
[@churros/app]:   bind:value={event}
[@churros/app]: >
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/InputRadios.svelte:15:6
[@churros/app]: Error: Type '([Value, MaybeLoading<string>] | [Value, Value])[]' is not assignable to type '[Value, MaybeLoading<string>][]'.
[@churros/app]:   Type '[Value, MaybeLoading<string>] | [Value, Value]' is not assignable to type '[Value, MaybeLoading<string>]'.
[@churros/app]:     Type '[Value, Value]' is not assignable to type '[Value, MaybeLoading<string>]'.
[@churros/app]:       Type at position 1 in source is not compatible with type at position 1 in target.
[@churros/app]:         Type 'Value' is not assignable to type 'MaybeLoading<string>'.
[@churros/app]:           Type 'string | number' is not assignable to type 'MaybeLoading<string>'.
[@churros/app]:             Type 'number' is not assignable to type 'MaybeLoading<string>'. (ts)
[@churros/app]:   let optionsWithDisplay: Array<[Value, MaybeLoading<string>]> = [];
[@churros/app]:   $: optionsWithDisplay = Array.isArray(options)
[@churros/app]:     ? options.map((option) => (Array.isArray(option) ? option : [option, option]))
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/InputSelectOneDropdown.svelte:43:24
[@churros/app]: Error: No overload matches this call.
[@churros/app]:   Overload 1 of 2, '(o: ArrayLike<string> | { [s: string]: string; }): [string, string][]', gave the following error.
[@churros/app]:     Argument of type 'unique symbol | Record<Value, string> | null | undefined' is not assignable to parameter of type 'ArrayLike<string> | { [s: string]: string; }'.
[@churros/app]:       Type 'undefined' is not assignable to type 'ArrayLike<string> | { [s: string]: string; }'.
[@churros/app]:   Overload 2 of 2, '(o: {}): [string, any][]', gave the following error.
[@churros/app]:     Argument of type 'unique symbol | Record<Value, string> | null | undefined' is not assignable to parameter of type '{}'.
[@churros/app]:       Type 'undefined' is not assignable to type '{}'. (ts)
[@churros/app]:       ? [...options.entries()]
[@churros/app]:       : Object.entries(options);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/InputToggleTriState.svelte:20:14
[@churros/app]: Warn: Component has unused export property 'labels'. If it is for external reference only, please consider using `export const labels` (svelte)
[@churros/app]:   /** For assistive technologies */
[@churros/app]:   export let labels: Array<[EnumValue, string]>;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ItemBuyingTable.svelte:40:9
[@churros/app]: Error: Type '{ __typename: true; '...on MutationPaidShopPaymentSuccess': { data: { paid: true; }; }; '...on Error': { message: true; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationPaidShopPaymentSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __t...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on MutationPaidShopPaymentSuccess': { data: { paid: true; }; }; '...on Error': { message: true; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationPaidShopPaymentSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typename?: ...'. (ts)
[@churros/app]:         },
[@churros/app]:         {
[@churros/app]:           '__typename': true,
[@churros/app]:           '...on MutationPaidShopPaymentSuccess': {
[@churros/app]:             data: {
[@churros/app]:               paid: true,
[@churros/app]:             },
[@churros/app]:           },
[@churros/app]:           '...on Error': {
[@churros/app]:             message: true,
[@churros/app]:           },
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ItemOrder.svelte:60:13
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on MutationPaidShopPaymentSuccess': { data: { __typename: true; }; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationPaidShopPaymentSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __t...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on MutationPaidShopPaymentSuccess': { data: { __typename: true; }; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on MutationPaidShopPaymentSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typename?: ...'. (ts)
[@churros/app]:             },
[@churros/app]:             {
[@churros/app]:               '__typename': true,
[@churros/app]:               '...on Error': { message: true },
[@churros/app]:               '...on MutationPaidShopPaymentSuccess': {
[@churros/app]:                 data: {
[@churros/app]:                   __typename: true,
[@churros/app]:                 },
[@churros/app]:               },
[@churros/app]:             },
[@churros/app]:           ],
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ItemOrder.svelte:74:31
[@churros/app]: Error: Argument of type 'unknown' is not assignable to parameter of type 'string'. (ts)
[@churros/app]:           paymentLoading = false;
[@churros/app]:           toasts.add('error', serverError);
[@churros/app]:           return;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ItemTicket.svelte:147:28
[@churros/app]: Error: Argument of type '"/events/[id]/book/[ticket]"' is not assignable to parameter of type 'FunctionKeys<{ 'GET /[entity=entity_handle]': (entity: string, params?: {} | undefined) => string; 'GET /bookings/[code].pdf': (code: string | number, params?: {} | undefined) => string; 'GET /events/[id]/[slug]/[...path]': (params: { ...; }) => string; ... 127 more ...; '/signup/finish/[token]': (token: string | nu...'. (ts)
[@churros/app]:             disabled={placesLeft === 0}
[@churros/app]:             href={refroute('/events/[id]/book/[ticket]', { id: event.localID, ticket: uid })}
[@churros/app]:           >
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ModalChangelog.svelte:145:33
[@churros/app]: Error: Object literal may only specify known properties, and 'element' does not exist in type '{ tall?: boolean | undefined; notrigger?: boolean | undefined; removeBottomPadding?: boolean | undefined; implicitClose?: (() => void) | undefined; open?: (() => void) | undefined; }'. (ts)
[@churros/app]: 
[@churros/app]: <Modal notrigger bind:open bind:element on:close-by-outside-click={acknowledge}>
[@churros/app]:   {@const { first, last } = versionRange(changes)}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ModalCreateCustomPage.svelte:72:23
[@churros/app]: Error: Argument of type 'QueryResult<CreateCustomPage$result, CreateCustomPage$input>' is not assignable to parameter of type 'MutationResult<"upsertPage", { readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }, never, unknown, "MutationUpsertPageSuccess">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'CreateCustomPage$result | null' is not assignable to type 'Record<"upsertPage", OperationResult<{ readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }, never, unknown, "MutationUpsertPageSuccess">> | null | undefined'.
[@churros/app]:       Type 'CreateCustomPage$result' is not assignable to type 'Record<"upsertPage", OperationResult<{ readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }, never, unknown, "MutationUpsertPageSuccess">>'.
[@churros/app]:         Types of property 'upsertPage' are incompatible.
[@churros/app]:           Type '{ readonly message: string; readonly __typename: "Error"; } | { readonly fieldErrors: { readonly path: string[]; readonly message: string; }[]; readonly __typename: "ZodError"; } | { readonly data: { ...; }; readonly __typename: "MutationUpsertPageSuccess"; }' is not assignable to type 'OperationResult<{ readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }, never, unknown, "MutationUpsertPageSuccess">'.
[@churros/app]:             Type '{ readonly data: { readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }; readonly __typename: "MutationUpsertPageSuccess"; }' is not assignable to type 'OperationResult<{ readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }, never, unknown, "MutationUpsertPageSuccess">'.
[@churros/app]:               Type '{ readonly data: { readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }; readonly __typename: "MutationUpsertPageSuccess"; }' is not assignable to type 'SuccessWithCaveats<never, { readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }, unknown, "MutationUpsertPageSuccess">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly data: { readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }; readonly __typename: "MutationUpsertPageSuccess"; }' but required in type '{ data: { readonly path: string; readonly group: { readonly uid: string; } | null; readonly studentAssociation: { readonly uid: string; } | null; }; ' $fragments': unknown; __typename: "MutationUpsertPageSuccess"; }'. (ts)
[@churros/app]:       });
[@churros/app]:       toasts.mutation(result, 'upsertPage', 'Page créée', 'Impossible de créer la page');
[@churros/app]:       if (result.data?.upsertPage && 'data' in result.data.upsertPage) {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ModalCreateGroup.svelte:69:44
[@churros/app]: Error: Argument of type 'QueryResult<CreateGroup$result, CreateGroup$input>' is not assignable to parameter of type 'MutationResult<"upsertGroup", { readonly uid: string; }, CaveatKey, unknown, "MutationUpsertGroupSuccess">'.
[@churros/app]:   Types of property 'data' are incompatible.
[@churros/app]:     Type 'CreateGroup$result | null' is not assignable to type 'Record<"upsertGroup", OperationResult<{ readonly uid: string; }, CaveatKey, unknown, "MutationUpsertGroupSuccess">> | null | undefined'.
[@churros/app]:       Type 'CreateGroup$result' is not assignable to type 'Record<"upsertGroup", OperationResult<{ readonly uid: string; }, CaveatKey, unknown, "MutationUpsertGroupSuccess">>'.
[@churros/app]:         Types of property 'upsertGroup' are incompatible.
[@churros/app]:           Type '{ readonly message: string; readonly __typename: "Error"; } | { readonly fieldErrors: { readonly path: string[]; readonly message: string; }[]; readonly __typename: "ZodError"; } | { readonly data: { ...; }; readonly __typename: "MutationUpsertGroupSuccess"; }' is not assignable to type 'OperationResult<{ readonly uid: string; }, CaveatKey, unknown, "MutationUpsertGroupSuccess">'.
[@churros/app]:             Type '{ readonly data: { readonly uid: string; }; readonly __typename: "MutationUpsertGroupSuccess"; }' is not assignable to type 'OperationResult<{ readonly uid: string; }, CaveatKey, unknown, "MutationUpsertGroupSuccess">'.
[@churros/app]:               Type '{ readonly data: { readonly uid: string; }; readonly __typename: "MutationUpsertGroupSuccess"; }' is not assignable to type 'SuccessWithCaveats<CaveatKey, { readonly uid: string; }, unknown, "MutationUpsertGroupSuccess">'.
[@churros/app]:                 Property '' $fragments'' is missing in type '{ readonly data: { readonly uid: string; }; readonly __typename: "MutationUpsertGroupSuccess"; }' but required in type '{ data: { readonly uid: string; }; ' $fragments': unknown; __typename: "MutationUpsertGroupSuccess"; }'. (ts)
[@churros/app]:       const result = await CreateGroup.mutate({ name, uid, type, studentAssociation });
[@churros/app]:       if (mutationSucceeded('upsertGroup', result)) {
[@churros/app]:         element.close();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/ModalCreateGroup.svelte:73:55
[@churros/app]: Error: Argument of type 'QueryResult<CreateGroup$result, CreateGroup$input>' is not assignable to parameter of type 'MutationResult<"upsertGroup", { readonly uid: string; }, CaveatKey, unknown, "MutationUpsertGroupSuccess">'. (ts)
[@churros/app]:       } else {
[@churros/app]:         errors = mutationErrorMessages('upsertGroup', result);
[@churros/app]:       }
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/NavigationTop.svelte:56:24
[@churros/app]: Error: Object literal may only specify known properties, and 'element' does not exist in type '{ open: () => void; }'. (ts)
[@churros/app]: 
[@churros/app]: <ModalReportIssue bind:element={reportIssueDialogElement} />
[@churros/app]: 
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/NavigationTop.svelte:58:84
[@churros/app]: Error: Type '{ id: string; variant: "auto" | "light" | "dark"; }' is not assignable to type 'string'. (ts)
[@churros/app]: 
[@churros/app]: <nav id="navigation-top" class:scrolled class:transparent={Boolean($currentEvent)} class={$theme}>
[@churros/app]:   {#if $currentEvent}
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/lib/components/PickMajor.svelte:66:48
[@churros/app]: Error: Parameter 's' implicitly has an 'any' type. (ts)
[@churros/app]:   <svelte:fragment slot="category" let:category let:firstOption>
[@churros/app]:     {@const school = firstOption.schools.find((s) => s.uid === category.id)}
[@churros/app]:     <AvatarSchool {school} />
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/NavigationTop.svelte:51:34
[@churros/app]: Error: Type 'null' cannot be used as an index type. (ts)
[@churros/app]:     if (!to?.route.id) return;
[@churros/app]:     topnavConfig = topnavConfigs[to.route.id! as LayoutRouteId];
[@churros/app]:   });
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/NavigationTop.svelte:60:59
[@churros/app]: Error: Argument of type 'Page<Record<string, string>, string | null>' is not assignable to parameter of type 'Page<{ uid: string; id: string; code: string; major: string; yearTier: string; subject: string; document: string; week: string; ticket: string; form: string; section: string; page: string; itemUid: string; ... 6 more ...; qrcode: string; }, "/(app)"> & ... 105 more ... & Page<...>'.
[@churros/app]:   Type 'Page<Record<string, string>, string | null>' is not assignable to type 'Page<{ uid: string; id: string; code: string; major: string; yearTier: string; subject: string; document: string; week: string; ticket: string; form: string; section: string; page: string; itemUid: string; ... 6 more ...; qrcode: string; }, "/(app)">'.
[@churros/app]:     Type 'Record<string, string>' is missing the following properties from type '{ uid: string; id: string; code: string; major: string; yearTier: string; subject: string; document: string; week: string; ticket: string; form: string; section: string; page: string; itemUid: string; token: string; ... 5 more ...; qrcode: string; }': uid, id, code, major, and 16 more. (ts)
[@churros/app]:       actions = [],
[@churros/app]:     } = typeof topnavConfig === 'function' ? topnavConfig($page) : topnavConfig);
[@churros/app]:   }
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/NavigationTop.svelte:69:6
[@churros/app]: Error: Object literal may only specify known properties, and '"on:NAVTOP_UPDATE_TITLE"' does not exist in type 'HTMLProps<"svelte:window", HTMLAttributes<any>>'. (ts)
[@churros/app]: <svelte:window
[@churros/app]:   on:NAVTOP_UPDATE_TITLE={({ detail }) => {
[@churros/app]:     title = detail;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/NavigationTop.svelte:69:30
[@churros/app]: Error: Binding element 'detail' implicitly has an 'any' type. (ts)
[@churros/app]: <svelte:window
[@churros/app]:   on:NAVTOP_UPDATE_TITLE={({ detail }) => {
[@churros/app]:     title = detail;
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/[entity=entity_handle]/+server.ts:22:39
[@churros/app]: Error: Argument of type '"/groups/[uid]"' is not assignable to parameter of type 'FunctionKeys<{ 'GET /[entity=entity_handle]': (entity: string, params?: {} | undefined) => string; 'GET /bookings/[code].pdf': (code: string | number, params?: {} | undefined) => string; 'GET /events/[id]/[slug]/[...path]': (params: { ...; }) => string; ... 127 more ...; '/signup/finish/[token]': (token: string | nu...'. 
[@churros/app]:   url.pathname = `/${isGroup ? 'groups' : 'users'}/${uid}`;
[@churros/app]:   throw redirect(302, isGroup ? route('/groups/[uid]', uid) : route('/users/[uid]', uid));
[@churros/app]: };
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/[entity=entity_handle]/+server.ts:22:69
[@churros/app]: Error: Argument of type '"/users/[uid]"' is not assignable to parameter of type 'FunctionKeys<{ 'GET /[entity=entity_handle]': (entity: string, params?: {} | undefined) => string; 'GET /bookings/[code].pdf': (code: string | number, params?: {} | undefined) => string; 'GET /events/[id]/[slug]/[...path]': (params: { ...; }) => string; ... 127 more ...; '/signup/finish/[token]': (token: string | nu...'. 
[@churros/app]:   url.pathname = `/${isGroup ? 'groups' : 'users'}/${uid}`;
[@churros/app]:   throw redirect(302, isGroup ? route('/groups/[uid]', uid) : route('/users/[uid]', uid));
[@churros/app]: };
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/announcements/+page.ts:5:14
[@churros/app]: Error: Type '({ fetch, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/announcements">) => Promise<{ announcements: { edges: { node: { id: string; title: string; ... 4 more ...; warning: boolean; }; }[]; }; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ announcements: { edges: { node: { id: string; title: string; bodyHtml: string; by?: { uid: string; fullName: string; pictureFile: string; } | undefined; endsAt: Date; startsAt: Date; warning: boolean; }; }[]; }; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ announcements: { edges: { node: { id: string; title: string; bodyHtml: string; by?: { uid: string; fullName: string; pictureFile: string; } | undefined; endsAt: Date; startsAt: Date; warning: boolean; }; }[]; }; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ announcements: { edges: { node: { id: string; title: string; bodyHtml: string; by?: { uid: string; fullName: string; pictureFile: string; } | undefined; endsAt: Date; startsAt: Date; warning: boolean; }; }[]; }; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ announcements: { edges: { node: { id: string; title: string; bodyHtml: string; by?: { uid: string; fullName: string; pictureFile: string; } | undefined; endsAt: Date; startsAt: Date; warning: boolean; }; }[]; }; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/announcements/+page.ts:6:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me?.admin) throw redirect(301, '/');
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/announcements/+page.ts:31:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/backrooms/services/+page.ts:6:14
[@churros/app]: Error: Type '({ fetch, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/backrooms/services">) => Promise<{ announcements: { __typename: never; __directives: never; __alias: never; edges: ({ ...; } | undefined)[]; nodes: ({ ...; } | undefined)[]; pageInfo: { ...; } | undefined; } | undefined; ... 97 more ...; userSe...' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ announcements: { __typename: never; __directives: never; __alias: never; edges: ({ __typename: never; __directives: never; __alias: never; cursor: never; node: { createdAt: never; id: never; ... 12 more ...; warning: boolean | ... 1 more ... | undefined; } | undefined; } | undefined)[]; nodes: ({ ...; } | ...' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ announcements: { __typename: never; __directives: never; __alias: never; edges: ({ __typename: never; __directives: never; __alias: never; cursor: never; node: { createdAt: never; id: never; ... 12 more ...; warning: boolean | ... 1 more ... | undefined; } | undefined; } | undefined)[]; nodes: ({ ...; } | ...' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ announcements: { __typename: never; __directives: never; __alias: never; edges: ({ __typename: never; __directives: never; __alias: never; cursor: never; node: { createdAt: never; id: never; localID: never; ... 11 more ...; warning: boolean | ... 1 more ... | undefined; } | undefined; } | undefined)[]; nodes: ({ ....' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ announcements: { __typename: never; __directives: never; __alias: never; edges: ({ __typename: never; __directives: never; __alias: never; cursor: never; node: { createdAt: never; id: never; localID: never; ... 11 more ...; warning: boolean | ... 1 more ... | undefined; } | undefined; } | undefined)[]; nodes: ({ ....' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const data = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/backrooms/services/+page.ts:8:13
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]:   const data = await parent();
[@churros/app]:   if (!data.me) throw redirectToLogin('/backrooms/services');
[@churros/app]:   if (!data.me.admin) throw redirect(307, '/');
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/backrooms/services/+page.ts:9:13
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]:   if (!data.me) throw redirectToLogin('/backrooms/services');
[@churros/app]:   if (!data.me.admin) throw redirect(307, '/');
[@churros/app]:   return loadQuery(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/backrooms/services/+page.ts:13:9
[@churros/app]: Error: Property 'mine' is missing in type '{}' but required in type '{ mine: boolean | Variable<any, string>; }'. 
[@churros/app]:       services: [
[@churros/app]:         {},
[@churros/app]:         {
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/bar-weeks/+page.ts:5:3
[@churros/app]: Error: Type 'Promise<{ barWeeks: { groups: { uid: string; id: string; pictureFile: string; pictureFileDark: string; name: string; }[]; uid: string; description: string; descriptionHtml: string; id: string; endsAt: Date; startsAt: Date; }[]; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:   Type 'Promise<{ barWeeks: { groups: { uid: string; id: string; pictureFile: string; pictureFileDark: string; name: string; }[]; uid: string; description: string; descriptionHtml: string; id: string; endsAt: Date; startsAt: Date; }[]; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type '{ barWeeks: { groups: { uid: string; id: string; pictureFile: string; pictureFileDark: string; name: string; }[]; uid: string; description: string; descriptionHtml: string; id: string; endsAt: Date; startsAt: Date; }[]; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:       Property 'mobile' is missing in type '{ barWeeks: { groups: { uid: string; id: string; pictureFile: string; pictureFileDark: string; name: string; }[]; uid: string; description: string; descriptionHtml: string; id: string; endsAt: Date; startsAt: Date; }[]; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) =>
[@churros/app]:   loadQuery(
[@churros/app]:     {
[@churros/app]:       barWeeks: Selector('BarWeek')({
[@churros/app]:         id: true,
[@churros/app]:         uid: true,
[@churros/app]:         startsAt: true,
[@churros/app]:         endsAt: true,
[@churros/app]:         descriptionHtml: true,
[@churros/app]:         description: true,
[@churros/app]:         groups: {
[@churros/app]:           id: true,
[@churros/app]:           uid: true,
[@churros/app]:           pictureFile: true,
[@churros/app]:           pictureFileDark: true,
[@churros/app]:           name: true,
[@churros/app]:         },
[@churros/app]:       }),
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/bar-weeks/+page.ts:23:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/birthdays/+page.ts:5:14
[@churros/app]: Error: Type '({ fetch, parent, url }: LoadEvent<RouteParams, null, PageParentData, "/(app)/birthdays">) => Promise<{ birthdays: { uid: string; birthday?: Date | undefined; fullName: string; major?: { ...; } | undefined; pictureFile: string; }[]; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ birthdays: { uid: string; birthday?: Date | undefined; fullName: string; major?: { shortName: string; } | undefined; pictureFile: string; }[]; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ birthdays: { uid: string; birthday?: Date | undefined; fullName: string; major?: { shortName: string; } | undefined; pictureFile: string; }[]; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ birthdays: { uid: string; birthday?: Date | undefined; fullName: string; major?: { shortName: string; } | undefined; pictureFile: string; }[]; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ birthdays: { uid: string; birthday?: Date | undefined; fullName: string; major?: { shortName: string; } | undefined; pictureFile: string; }[]; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/birthdays/+page.ts:6:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/birthdays/+page.ts:23:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/boards/+page.ts:5:14
[@churros/app]: Error: Type '({ fetch, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/boards">) => Promise<{ groups: { members: { title: string; president: boolean; secretary: boolean; vicePresident: boolean; treasurer: boolean; member: { ...; }; }[]; ... 4 more ...; type: GroupType; }[]; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ groups: { members: { title: string; president: boolean; secretary: boolean; vicePresident: boolean; treasurer: boolean; member: { uid: string; fullName: string; lastName: string; pictureFile: string; }; }[]; ... 4 more ...; type: GroupType; }[]; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ groups: { members: { title: string; president: boolean; secretary: boolean; vicePresident: boolean; treasurer: boolean; member: { uid: string; fullName: string; lastName: string; pictureFile: string; }; }[]; ... 4 more ...; type: GroupType; }[]; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ groups: { members: { title: string; president: boolean; secretary: boolean; vicePresident: boolean; treasurer: boolean; member: { uid: string; fullName: string; lastName: string; pictureFile: string; }; }[]; ... 4 more ...; type: GraphQLTypes["GroupType"]; }[]; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ groups: { members: { title: string; president: boolean; secretary: boolean; vicePresident: boolean; treasurer: boolean; member: { uid: string; fullName: string; lastName: string; pictureFile: string; }; }[]; ... 4 more ...; type: GraphQLTypes["GroupType"]; }[]; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const { groups } = await loadQuery(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/boards/+page.ts:32:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/claim-code/+page.ts:4:14
[@churros/app]: Error: Type '({ url, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/claim-code">) => Promise<{}>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{}>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{}>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{}' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{}' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ url, parent }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/claim-code/+page.ts:5:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ url, parent }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/claim-code/[code]/+page.ts:4:14
[@churros/app]: Error: Type '({ fetch, params }: LoadEvent<RouteParams, null, PageParentData, "/(app)/claim-code/[code]">) => Promise<{ error: string; result?: undefined; } | { result: boolean; error?: undefined; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ error: string; result?: undefined; } | { result: boolean; error?: undefined; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ error: string; result?: undefined; } | { result: boolean; error?: undefined; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ error: string; result?: undefined; } | { result: boolean; error?: undefined; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Type '{ error: string; result?: undefined; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:           Property 'mobile' is missing in type '{ error: string; result?: undefined; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, params }) => {
[@churros/app]:   const result = await graphql(`
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/credits/+page.ts:5:14
[@churros/app]: Error: Type '({ fetch, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/credits">) => Promise<{ codeContributors: unknown; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ codeContributors: unknown; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ codeContributors: unknown; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ codeContributors: unknown; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ codeContributors: unknown; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const { codeContributors } = await loadQuery(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/credits/+page.ts:8:7
[@churros/app]: Error: Type '{ __typename: true; '...on Error': { message: true; }; '...on QueryCodeContributorsSuccess': { data: { uid: true; id: true; fullName: true; pictureFile: true; }; }; }' is not assignable to type 'AliasType<{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on QueryCodeContributorsSuccess": AliasType<{ data?: AliasType<...> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typ...'.
[@churros/app]:   Property '["...on ZodError"]' is missing in type '{ __typename: true; '...on Error': { message: true; }; '...on QueryCodeContributorsSuccess': { data: { uid: true; id: true; fullName: true; pictureFile: true; }; }; }' but required in type '{ "...on Error": AliasType<{ message?: boolean | `@${string}` | undefined; __typename?: boolean | `@${string}` | undefined; }>; "...on QueryCodeContributorsSuccess": AliasType<{ data?: AliasType<{ ...; }> | undefined; __typename?: boolean | ... 1 more ... | undefined; }>; "...on ZodError": AliasType<...>; __typename...'. 
[@churros/app]:     {
[@churros/app]:       codeContributors: {
[@churros/app]:         '__typename': true,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/+page.ts:5:3
[@churros/app]: Error: Type 'Promise<{ major: { uid: string; name: string; shortName: string; }; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:   Type 'Promise<{ major: { uid: string; name: string; shortName: string; }; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type '{ major: { uid: string; name: string; shortName: string; }; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:       Property 'mobile' is missing in type '{ major: { uid: string; name: string; shortName: string; }; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params }) =>
[@churros/app]:   loadQuery(
[@churros/app]:     {
[@churros/app]:       major: [
[@churros/app]:         { uid: params.major },
[@churros/app]:         {
[@churros/app]:           name: true,
[@churros/app]:           shortName: true,
[@churros/app]:           uid: true,
[@churros/app]:         },
[@churros/app]:       ],
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/+page.ts:16:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/+page.ts:4:14
[@churros/app]: Error: Type '({ fetch, parent, params }: LoadEvent<RouteParams, null, PageParentData, "/(app)/documents/[major]/[yearTier=display_year_tier]">) => Promise<{ major: { uid: string; name: string; shortName: string; subjects: { ...; }[]; }; subjectsOfMajor: { ...; }[]; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ major: { uid: string; name: string; shortName: string; subjects: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; minors: { uid: string; id: string; name: string; }[]; documentsCount: number; nextExamAt?: Date | undefined; semester?: number | undefin...' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ major: { uid: string; name: string; shortName: string; subjects: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; minors: { uid: string; id: string; name: string; }[]; documentsCount: number; nextExamAt?: Date | undefined; semester?: number | undefin...' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ major: { uid: string; name: string; shortName: string; subjects: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; minors: { uid: string; id: string; name: string; }[]; documentsCount: number; nextExamAt?: Date | undefined; semester?: number | undefined; unit...' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ major: { uid: string; name: string; shortName: string; subjects: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; minors: { uid: string; id: string; name: string; }[]; documentsCount: number; nextExamAt?: Date | undefined; semester?: number | undefined; unit...' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params }) => {
[@churros/app]:   const yearTier = Number.parseInt(params.yearTier.replace(/a(-fis(e|a))?$/, ''), 10);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/+page.ts:44:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/+page.ts:50:14
[@churros/app]: Error: Type '(event: LoadEvent<RouteParams, null, PageParentData, "/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]">) => Promise<...>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<(Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>) | PageSchoolSubject$result>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<(Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>) | PageSchoolSubject$result>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '(Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>) | PageSchoolSubject$result' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Type 'PageSchoolSubject$result' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:           Property 'mobile' is missing in type 'PageSchoolSubject$result' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async (event) => {
[@churros/app]:   const { yearTier, forApprentices } = parseDisplayYearTierAndForApprentices(event.params.yearTier);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/+page.ts:6:14
[@churros/app]: Error: Type '({ fetch, parent, params, url }: LoadEvent<RouteParams, null, PageParentData, "/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]">) => Promise<...>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; name: string; shortName: string; emoji: string; }; document: { createdAt: Date; descriptionHtml: string; ... 9 more ...; uploader?: { ...; } | undefined; }; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; name: string; shortName: string; emoji: string; }; document: { createdAt: Date; descriptionHtml: string; ... 9 more ...; uploader?: { ...; } | undefined; }; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; name: string; shortName: string; emoji: string; }; document: { createdAt: Date; descriptionHtml: string; ... 9 more ...; uploader?: { ...; } | undefined; }; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; name: string; shortName: string; emoji: string; }; document: { createdAt: Date; descriptionHtml: string; ... 9 more ...; uploader?: { ...; } | undefined; }; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/+page.ts:7:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/+page.ts:68:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/edit/+page.ts:6:14
[@churros/app]: Error: Type '({ fetch, parent, params, url }: LoadEvent<RouteParams, null, PageParentData, "/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/edit">) => Promise<...>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; forApprentices: boolean; }; document: { ...; }; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; forApprentices: boolean; }; document: { ...; }; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; forApprentices: boolean; }; document: { ...; }; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ major: { uid: string; name: string; shortName: string; }; subject: { uid: string; id: string; yearTier?: number | undefined; name: string; shortName: string; emoji: string; forApprentices: boolean; }; document: { ...; }; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/edit/+page.ts:7:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/[document]/edit/+page.ts:67:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/create/+page.ts:6:14
[@churros/app]: Error: Type '({ fetch, parent, params, url }: LoadEvent<RouteParams, null, PageParentData, "/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/create">) => Promise<...>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ major: { uid: string; shortName: string; }; subject: { uid: string; id: string; links: { name: string; computedValue: string; }[]; yearTier?: number | undefined; name: string; shortName: string; majors: { ...; }[]; emoji: string; minors: { ...; }[]; forApprentices: boolean; }; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ major: { uid: string; shortName: string; }; subject: { uid: string; id: string; links: { name: string; computedValue: string; }[]; yearTier?: number | undefined; name: string; shortName: string; majors: { ...; }[]; emoji: string; minors: { ...; }[]; forApprentices: boolean; }; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ major: { uid: string; shortName: string; }; subject: { uid: string; id: string; links: { name: string; computedValue: string; }[]; yearTier?: number | undefined; name: string; shortName: string; majors: { ...; }[]; emoji: string; minors: { ...; }[]; forApprentices: boolean; }; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ major: { uid: string; shortName: string; }; subject: { uid: string; id: string; links: { name: string; computedValue: string; }[]; yearTier?: number | undefined; name: string; shortName: string; majors: { ...; }[]; emoji: string; minors: { ...; }[]; forApprentices: boolean; }; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/create/+page.ts:7:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent, params, url }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   if (!me) throw redirectToLogin(url.pathname);
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/documents/[major]/[yearTier=display_year_tier]/[subject]/create/+page.ts:37:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/events/[id]/[slug]/[...path]/+server.ts:18:27
[@churros/app]: Error: Property 'group' does not exist on type 'Locals'. 
[@churros/app]:     variables: {
[@churros/app]:       group: event.locals.group,
[@churros/app]:       slug: event.params.slug,
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/events/[id]/bookings/+page.ts:6:7
[@churros/app]: Error: Type 'Promise<{ filter: string; id: string; }>' is not assignable to type 'MakeOptional<PageEventAllBookings$input, "id"> | Promise<MakeOptional<PageEventAllBookings$input, "id">>'.
[@churros/app]:   Type 'Promise<{ filter: string; id: string; }>' is not assignable to type 'Promise<MakeOptional<PageEventAllBookings$input, "id">>'.
[@churros/app]:     Type '{ filter: string; id: string; }' is not assignable to type 'MakeOptional<PageEventAllBookings$input, "id">'.
[@churros/app]:       Type '{ filter: string; id: string; }' is not assignable to type 'Omit<PageEventAllBookings$input, "id">'.
[@churros/app]:         Types of property 'filter' are incompatible.
[@churros/app]:           Type 'string' is not assignable to type 'ValueOf<{ readonly Paid: "Paid"; readonly Unpaid: "Unpaid"; readonly Verified: "Verified"; }>'. 
[@churros/app]:   params,
[@churros/app]: }) => ({
[@churros/app]:   ...params,
[@churros/app]:   filter:
[@churros/app]:     {
[@churros/app]:       paid: 'Paid',
[@churros/app]:       unpaid: 'Unpaid',
[@churros/app]:       verified: 'Verified',
[@churros/app]:     }[searchParams.get('tab') ?? 'unpaid'] ?? 'Unpaid',
[@churros/app]: });
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/+page.ts:4:14
[@churros/app]: Error: Type '({ fetch, parent }: LoadEvent<RouteParams, null, PageParentData, "/(app)/groups">) => Promise<{ groups: { uid: string; description: string; pictureFile: string; ... 5 more ...; studentAssociation: { ...; }; }[]; studentAssociations: ({ ...; } | undefined)[]; }>' is not assignable to type 'PageLoad'.
[@churros/app]:   Type 'Promise<{ groups: { uid: string; description: string; pictureFile: string; pictureFileDark: string; name: string; groupId: string; type: GroupType; parentId?: string | undefined; studentAssociation: { ...; }; }[]; studentAssociations: ({ ...; } | undefined)[]; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type 'Promise<{ groups: { uid: string; description: string; pictureFile: string; pictureFileDark: string; name: string; groupId: string; type: GroupType; parentId?: string | undefined; studentAssociation: { ...; }; }[]; studentAssociations: ({ ...; } | undefined)[]; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:       Type '{ groups: { uid: string; description: string; pictureFile: string; pictureFileDark: string; name: string; groupId: string; type: GroupType; parentId?: string | undefined; studentAssociation: { ...; }; }[]; studentAssociations: ({ ...; } | undefined)[]; }' is not assignable to type 'Omit<PageData, RequiredKeys<PageParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:         Property 'mobile' is missing in type '{ groups: { uid: string; description: string; pictureFile: string; pictureFileDark: string; name: string; groupId: string; type: GroupType; parentId?: string | undefined; studentAssociation: { ...; }; }[]; studentAssociations: ({ ...; } | undefined)[]; }' but required in type 'Omit<PageData, RequiredKeys<PageParentData>>'. 
[@churros/app]: 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/+page.ts:5:11
[@churros/app]: Error: Property 'me' does not exist on type 'PageParentData'. 
[@churros/app]: export const load: PageLoad = async ({ fetch, parent }) => {
[@churros/app]:   const { me } = await parent();
[@churros/app]:   return loadQuery(
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/+page.ts:41:14
[@churros/app]: Error: Type '() => Promise<PageParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'.
[@churros/app]:   Type 'Promise<PageParentData>' is not assignable to type 'Promise<{ token?: string | undefined; }>'.
[@churros/app]:     Type 'PageParentData' has no properties in common with type '{ token?: string | undefined; }'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+layout.ts:5:3
[@churros/app]: Error: Type 'Promise<{ group: { uid: string; name: string; canListPages: boolean; }; }>' is not assignable to type 'MaybePromise<Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:   Type 'Promise<{ group: { uid: string; name: string; canListPages: boolean; }; }>' is not assignable to type 'Promise<Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>>'.
[@churros/app]:     Type '{ group: { uid: string; name: string; canListPages: boolean; }; }' is not assignable to type 'Omit<PageData, RequiredKeys<LayoutParentData>> & Partial<Pick<PageData, never>> & Record<string, any>'.
[@churros/app]:       Property 'mobile' is missing in type '{ group: { uid: string; name: string; canListPages: boolean; }; }' but required in type 'Omit<PageData, RequiredKeys<LayoutParentData>>'. 
[@churros/app]: export const load: LayoutLoad = async ({ parent, fetch, params }) =>
[@churros/app]:   loadQuery(
[@churros/app]:     {
[@churros/app]:       group: [
[@churros/app]:         { uid: params.uid },
[@churros/app]:         Selector('Group')({
[@churros/app]:           uid: true,
[@churros/app]:           name: true,
[@churros/app]:           canListPages: true,
[@churros/app]:         }),
[@churros/app]:       ],
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/+layout.ts:16:14
[@churros/app]: Error: Type '() => Promise<LayoutParentData>' is not assignable to type '() => Promise<{ token?: string | undefined; }>'. 
[@churros/app]:     },
[@churros/app]:     { fetch, parent },
[@churros/app]:   );
[@churros/app]: 
[@churros/app]: 
[@churros/app]: /home/uwun/projects/churros/packages/app/src/routes/(app)/groups/[uid]/edit/bank-accounts/+page.ts:25:14
The command failed for workspaces that are depended upon by other workspaces; can't satisfy the dependency graph
Failed with errors in 1m 54s
